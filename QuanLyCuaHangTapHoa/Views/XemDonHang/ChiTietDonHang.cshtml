@model QuanLyCuaHangTapHoa.Models.Order

@{
    ViewBag.Title = "Chi tiết đơn hàng #" + Model.ID;
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/printThis/1.15.0/printThis.min.js"></script>

<div class="order-detail-container">
    <div class="page-header">
        <div class="back-button">
            <a href="@Url.Action("Index")" class="btn btn-outline">
                <i class="fas fa-arrow-left"></i> Quay lại danh sách
            </a>
        </div>
        <div class="title-container">
            <h1 class="page-title">
                <i class="fas fa-receipt"></i>
                Chi tiết đơn hàng #@Model.ID
            </h1>
            <div class="order-status @GetStatusClass(Model.Status)">@Model.Status</div>
        </div>
    </div>

    <div class="print-content ViewPrint">
        <!-- Phần tiêu đề cho bản in -->
        <div class="d-none d-print-block text-center mb-4">
            <h2>HÓA ĐƠN BÁN HÀNG</h2>
            <p>Mã đơn hàng: #@Model.ID</p>
            <p>Ngày lập: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")</p>
        </div>

        <div class="order-info-section">
            <div class="section-header">
                <i class="fas fa-info-circle"></i>
                Thông tin đơn hàng
            </div>
            <div class="info-grid">
                <div class="info-card">
                    <h3 class="card-title">Thông tin chung</h3>
                    <div class="info-item">
                        <span class="label">Ngày đặt:</span>
                        <span class="value">
                            @(Model.NgayDat.HasValue ? Model.NgayDat.Value.ToString("dd/MM/yyyy HH:mm") : "Không có thông tin")
                        </span>
                    </div>
                    @if (Model.NgayGiao.HasValue)
                    {
                        <div class="info-item">
                            <span class="label">Ngày giao:</span>
                            <span class="value">@Model.NgayGiao.Value.ToString("dd/MM/yyyy HH:mm")</span>
                        </div>
                    }
                    else
                    {
                        <div class="info-item">
                            <span class="label">Ngày giao:</span>
                            <span class="value text-muted">Chưa giao hàng</span>
                        </div>
                    }
                    <div class="info-item">
                        <span class="label">Thanh toán:</span>
                        <span class="value @(Model.Payment == true ? "text-success" : "text-warning")">
                            @(Model.Payment == true ? "Đã thanh toán" : "Thanh toán khi nhận hàng")
                        </span>
                    </div>
                    <div class="info-item">
                        <span class="label">Cập nhật:</span>
                        <span class="value">
                            @(Model.NgayCapNhat.HasValue ? Model.NgayCapNhat.Value.ToString("dd/MM/yyyy HH:mm") : "Chưa cập nhật")
                        </span>
                    </div>
                </div>

                <div class="info-card">
                    <h3 class="card-title">Thông tin khách hàng</h3>
                    <div class="info-item">
                        <span class="label">Họ và tên:</span>
                        <span class="value">@(Model.KhachHang?.HoTen ?? "Không có thông tin")</span>
                    </div>
                    <div class="info-item">
                        <span class="label">Số điện thoại:</span>
                        <span class="value">@(Model.KhachHang?.Sdt ?? "Không có thông tin")</span>
                    </div>
                    <div class="info-item">
                        <span class="label">Email:</span>
                        <span class="value">@(Model.KhachHang?.Email ?? "Không có thông tin")</span>
                    </div>
                </div>

                <div class="info-card">
                    <h3 class="card-title">Thông tin giao hàng</h3>
                    <div class="info-item">
                        <span class="label">Địa chỉ:</span>
                        <span class="value">@(string.IsNullOrEmpty(Model.ShippingAddress) ? Model.Address : Model.ShippingAddress)</span>
                    </div>
                    <div class="info-item">
                        <span class="label">Số lượng:</span>
                        <span class="value">@Model.TongSoLuong sản phẩm</span>
                    </div>
                    <div class="info-item">
                        <span class="label">Tổng tiền:</span>
                        <span class="value highlight">@String.Format("{0:N0} VNĐ", Model.ThanhTien)</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="products-section">
            <div class="section-header">
                <i class="fas fa-box-open"></i>
                Danh sách sản phẩm
            </div>
            <div class="products-table">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Sản phẩm</th>
                            <th class="text-center">Đơn giá</th>
                            <th class="text-center">Số lượng</th>
                            <th class="text-right">Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Order_Details != null && Model.Order_Details.Any())
                        {
                            foreach (var item in Model.Order_Details)
                            {
                                if (item.Product != null)
                                {
                                    <tr>
                                        <td>
                                            <div class="product-info">
                                                <div class="product-image">
                                                    @if (!string.IsNullOrEmpty(item.Product.Picture))
                                                    {
                                                        <img src="@Url.Content($"~/Resources/Pictures/Products/{item.Product.Picture}")"
                                                             alt="@item.Product.ProductName" />
                                                    }
                                                    else
                                                    {
                                                        <img src="@Url.Content("~/Resources/Pictures/Products/no-image.png")"
                                                             alt="No Image" />
                                                    }
                                                </div>
                                                <div class="product-details">
                                                    <div class="product-name">@item.Product.ProductName</div>
                                                    <div class="product-code">Mã SP: @item.Product.ProductCode</div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center">@String.Format("{0:N0} VNĐ", item.Price)</td>
                                        <td class="text-center">@item.SoLuong</td>
                                        <td class="text-right">@String.Format("{0:N0} VNĐ", item.Price * item.SoLuong)</td>
                                    </tr>
                                }
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center">Không có sản phẩm nào trong đơn hàng</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3" class="text-right">Tổng cộng:</td>
                            <td class="text-right total-price">@String.Format("{0:N0} VNĐ", Model.ThanhTien)</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div class="order-actions no-print">
        <button id="Print" class="btn btn-primary">
            <i class="fas fa-print"></i> In đơn hàng
        </button>
        @if (Model.Status == "Chờ xử lý" || Model.Status == "Chưa giao hàng")
        {
            <button class="btn btn-danger" onclick="confirmCancelOrder(@Model.ID)">
                <i class="fas fa-times"></i> Hủy đơn hàng
            </button>
        }
    </div>
</div>

@section Scripts {
    <script>
        function confirmCancelOrder(orderId) {
            if (confirm('Bạn có chắc muốn hủy đơn hàng này?')) {
                $.ajax({
                    url: '@Url.Action("HuyDon")',
                    type: 'POST',
                    data: {
                        id: orderId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            alert(result.message);
                            window.location.href = '@Url.Action("Index")';
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function () {
                        alert('Có lỗi xảy ra khi hủy đơn hàng');
                    }
                });
            }
        }

        $(document).ready(function () {
            $('#Print').on("click", function () {
                $('.ViewPrint').printThis({
                    debug: false,
                    importCSS: true,
                    importStyle: true,
                    printContainer: true,
                    removeInline: false,
                    printDelay: 333,
                    header: null,
                    footer: null,
                    base: false,
                    formValues: true,
                    canvas: false,
                    doctypeString: '<!DOCTYPE html>',
                    removeScripts: false,
                    copyTagClasses: true
                });
            });
        });
    </script>
}

<style>
    /* CSS cho chế độ in */
    @@media print {
        body * {
            visibility: hidden;
        }

        .ViewPrint, .ViewPrint * {
            visibility: visible;
        }

        .ViewPrint {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
        }

        .no-print {
            display: none !important;
        }

        .info-card {
            break-inside: avoid;
        }
    }

    .order-detail-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .page-header {
        margin-bottom: 30px;
    }

    .back-button {
        margin-bottom: 15px;
    }

    .btn-outline {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 10px 16px;
        border-radius: 8px;
        background: white;
        border: 1px solid #ddd;
        color: #555;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s ease;
    }

    .btn-outline:hover {
        background: #f5f5f5;
        color: #333;
    }

    .title-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 15px;
    }

    .page-title {
        font-size: 28px;
        font-weight: 600;
        color: #2c3e50;
        display: flex;
        align-items: center;
        gap: 15px;
        margin: 0;
    }

    .page-title i {
        color: #3498db;
    }

    .order-status {
        padding: 6px 12px;
        border-radius: 6px;
        font-weight: 500;
        font-size: 16px;
        text-transform: capitalize;
    }

    .badge-waiting {
        background-color: #fff8e1;
        color: #ff8f00;
    }

    .badge-delivering {
        background-color: #e3f2fd;
        color: #0277bd;
    }

    .badge-completed {
        background-color: #e8f5e9;
        color: #2e7d32;
    }

    .badge-cancelled {
        background-color: #ffebee;
        color: #c62828;
    }

    .section-header {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 22px;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 20px;
    }

    .section-header i {
        color: #3498db;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 40px;
    }

    .info-card {
        background: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    }

    .card-title {
        font-size: 18px;
        font-weight: 600;
        color: #3498db;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }

    .info-item {
        margin-bottom: 12px;
    }

    .info-item:last-child {
        margin-bottom: 0;
    }

    .label {
        color: #7f8c8d;
        display: block;
        margin-bottom: 5px;
        font-size: 14px;
    }

    .value {
        font-weight: 500;
        color: #2c3e50;
        font-size: 16px;
    }

    .value.highlight {
        font-weight: 700;
        color: #e74c3c;
        font-size: 18px;
    }

    .text-success {
        color: #28a745;
    }

    .text-warning {
        color: #ffc107;
    }

    .text-muted {
        color: #6c757d;
    }

    .products-section {
        margin-bottom: 30px;
    }

    .products-table {
        background: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        overflow-x: auto;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

    .table th {
        text-align: left;
        padding: 12px;
        border-bottom: 2px solid #eee;
        color: #7f8c8d;
        font-weight: 600;
    }

    .table td {
        padding: 15px 12px;
        border-bottom: 1px solid #eee;
        vertical-align: middle;
    }

    .table tfoot td {
        padding-top: 20px;
        border-top: 2px solid #eee;
        border-bottom: none;
        font-weight: 600;
    }

    .text-center {
        text-align: center;
    }

    .text-right {
        text-align: right;
    }

    .product-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .product-image {
        width: 70px;
        height: 70px;
        overflow: hidden;
        border-radius: 8px;
        flex-shrink: 0;
    }

    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .product-name {
        font-weight: 500;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .product-code {
        font-size: 12px;
        color: #7f8c8d;
    }

    .total-price {
        font-weight: 700;
        color: #e74c3c;
        font-size: 18px;
    }

    .order-actions {
        display: flex;
        gap: 15px;
        justify-content: flex-end;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 10px 16px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease;
        border: none;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #3498db;
        color: white;
    }

    .btn-primary:hover {
        background-color: #2980b9;
    }

    .btn-danger {
        background-color: #e74c3c;
        color: white;
    }

    .btn-danger:hover {
        background-color: #c0392b;
    }

    /* Responsive styling */
    @@media (max-width: 768px) {
        .info-grid {
            grid-template-columns: 1fr;
        }

        .product-info {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        .product-image {
            width: 60px;
            height: 60px;
        }

        .page-title {
            font-size: 24px;
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        .order-status {
            align-self: flex-start;
        }

        .order-actions {
            flex-direction: column;
            width: 100%;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
    }
</style>

@functions {
    string GetStatusClass(string status)
    {
        if (string.IsNullOrEmpty(status))
            return "badge-secondary";

        switch (status.ToLower())
        {
            case "chờ xử lý":
            case "chưa giao hàng":
                return "badge-waiting";
            case "đang giao":
            case "đang giao hàng":
                return "badge-delivering";
            case "hoàn thành":
                return "badge-completed";
            case "đã hủy":
                return "badge-cancelled";
            default:
                return "badge-secondary";
        }
    }
}