@model QuanLyCuaHangTapHoa.Models.Product
@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Views/Shared/_layoutadmin.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title>Thêm Sản Phẩm Mới</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="page-header">
                <h1 class="page-title">
                    <i class="fas fa-box-open"></i>
                    Thêm Sản Phẩm Mới
                </h1>
            </div>

            <div class="form-card">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, "Tên Sản Phẩm", new { @class = "control-label" })
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.SoLuong, "Số Lượng", new { @class = "control-label" })
                        @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0" } })
                        @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CatalogId, "Danh Mục", new { @class = "control-label" })
                        @Html.DropDownList("CatalogId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CatalogId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.PriceOld, "Giá Vốn", new { @class = "control-label" })
                        @Html.EditorFor(model => model.PriceOld, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0" } })
                        @Html.ValidationMessageFor(model => model.PriceOld, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.ProductSale, "Giảm Giá (%)", new { @class = "control-label" })
                        @Html.EditorFor(model => model.ProductSale, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @max = "100" } })
                        @Html.ValidationMessageFor(model => model.ProductSale, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MoTa, "Mô Tả Sản Phẩm", new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.MoTa, new
                    {
                        @class = "form-control editor",
                        id = "mota"
                    })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">Ảnh Sản Phẩm</label>
                    <div class="image-upload-container">
                        <div class="image-preview" id="imagePreview">
                            <div class="image-preview-placeholder">
                                <i class="fas fa-image fa-2x"></i>
                                <p>Xem trước ảnh</p>
                            </div>
                        </div>
                        <label for="ProductThumbnailStream" class="custom-file-upload">
                            <i class="fas fa-cloud-upload-alt"></i>
                            Chọn Ảnh
                        </label>
                        <input type="file" name="ProductThumbnailStream" id="ProductThumbnailStream" accept="image/*" />
                        <div class="selected-file-name" id="fileName"></div>
                        @Html.ValidationMessageFor(model => model.ProductThumbnailStream, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="button-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i>
                        Tạo Sản Phẩm
                    </button>
                    <a href="@Url.Action("Indexadminsp", "Product")" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i>
                        Hủy Bỏ
                    </a>
                </div>
            </div>
        }
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="https://cdn.ckeditor.com/4.16.2/standard/ckeditor.js"></script>
        <script>
            // Đảm bảo DOM đã load xong
            document.addEventListener('DOMContentLoaded', function () {
                if (CKEDITOR) {
                    CKEDITOR.replace('mota', {
                        height: 300,
                        language: 'vi',
                        removeButtons: 'About,Source',
                        toolbar: [
                            { name: 'clipboard', items: ['Cut', 'Copy', 'Paste', 'PasteText', '-', 'Undo', 'Redo'] },
                            { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike'] },
                            { name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'] },
                            { name: 'links', items: ['Link', 'Unlink'] },
                            { name: 'insert', items: ['Image', 'Table'] },
                            { name: 'styles', items: ['Styles', 'Format'] }
                        ]
                    });
                }
            });
        </script>
    }
    <script>
        document.getElementById('ProductThumbnailStream').addEventListener('change', function (e) {
            const file = e.target.files[0];
            const preview = document.getElementById('imagePreview');
            const fileName = document.getElementById('fileName');

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.innerHTML = `<img src="${e.target.result}" alt="Preview">`;
                }
                reader.readAsDataURL(file);
                fileName.textContent = file.name;
            } else {
                preview.innerHTML = `
                                    <div class="image-preview-placeholder">
                                        <i class="fas fa-image fa-2x"></i>
                                        <p>Xem trước ảnh</p>
                                    </div>`;
                fileName.textContent = '';
            }
        });
    </script>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', system-ui, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #f6fff8 0%, #f1fff5 100%);
            min-height: 100vh;
            padding: 2rem;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
        }

        .form-card {
            background: white;
            border-radius: 1rem;
            padding: 2rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            margin-top: 2rem;
        }

        .page-header {
            background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
            padding: 2rem;
            border-radius: 1rem;
            margin-bottom: 2rem;
            color: white;
        }

        .page-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-row {
            display: flex;
            margin-left: -0.75rem;
            margin-right: -0.75rem;
            gap: 1.5rem;
        }

        .col-md-6 {
            flex: 0 0 calc(50% - 0.75rem);
        }

        .control-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #1e293b;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #e2e8f0;
            border-radius: 0.5rem;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                outline: none;
                border-color: #22c55e;
                box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
            }

        .image-upload-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1rem;
            margin-top: 1rem;
        }

        .image-preview {
            width: 200px;
            height: 200px;
            border: 2px dashed #e2e8f0;
            border-radius: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            background: #f8fafc;
            transition: all 0.3s ease;
        }

            .image-preview:hover {
                border-color: #22c55e;
            }

            .image-preview img {
                max-width: 100%;
                max-height: 100%;
                object-fit: cover;
            }

        .custom-file-upload {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            background: #22c55e;
            color: white;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
        }

            .custom-file-upload:hover {
                background: #16a34a;
                transform: translateY(-1px);
            }

        input[type="file"] {
            display: none;
        }

        .button-group {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
        }

        .btn-primary {
            background: #22c55e;
            color: white;
        }

            .btn-primary:hover {
                background: #16a34a;
                transform: translateY(-1px);
            }

        .btn-secondary {
            background: #67809f;
            color: white;
        }

            .btn-secondary:hover {
                background: #c2f970;
            }

        .text-danger {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        @@media (max-width: 640px) {
            .form-row {
                flex-direction: column;
                gap: 0;
            }

            .col-md-6 {
                flex: 0 0 100%;
            }

            .button-group {
                flex-direction: column;
            }

            .btn {
                width: 100%;
                justify-content: center;
            }
        }

        .cke_chrome {
            border: 1px solid #e2e8f0 !important;
            border-radius: 0.5rem !important;
            overflow: hidden;
        }

        .cke_top {
            background: #f8fafc !important;
            border-bottom: 1px solid #e2e8f0 !important;
        }

        .cke_bottom {
            background: #f8fafc !important;
            border-top: 1px solid #e2e8f0 !important;
        }

        .cke_editable {
            padding: 15px !important;
        }

        /* Focus state để phù hợp với design */
        .cke_focus {
            outline: none !important;
            border-color: #22c55e !important;
            box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1) !important;
        }
    </style>
</body>
</html>