@model PagedList.IPagedList<QuanLyCuaHangTapHoa.Models.Product>
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Tất cả sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Banner Section -->
<div class="container mb-4">
    <div class="row">
        <div class="col-12">
            <div class="page-banner bg-light rounded p-4 d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0">Tất cả sản phẩm</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item"><a href="@Url.Action("TrangChu", "User")">Trang chủ</a></li>
                            <li class="breadcrumb-item active">Tất cả sản phẩm</li>
                        </ol>
                    </nav>
                </div>
                <div class="search-box">
                    @using (Html.BeginForm("TatCaSanPham", "Product", FormMethod.Get, new { @class = "d-flex" }))
                    {
                        <div class="input-group">
                            @Html.TextBox("searchString", ViewBag.searchStr as string, new { @class = "form-control", placeholder = "Tìm kiếm sản phẩm..." })
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filter Section -->
<div class="container mb-4">
    @using (Html.BeginForm("TatCaSanPham", "Product", FormMethod.Get, new { @class = "d-flex justify-content-between align-items-center" }))
    {
        @* Nếu có tìm kiếm, giữ lại giá trị searchString *@
        @Html.Hidden("searchString", ViewBag.searchStr as string)

        <div class="category-filter">
            @Html.DropDownList("category",
                new SelectList(ViewBag.Categories, "ID", "CatalogName", ViewBag.SelectedCategory),
                "-- Tất cả danh mục --",
                new { @class = "form-select me-2", onchange = "this.form.submit()" })
        </div>
        <div class="sort-filter">
            @Html.DropDownList("sortOrder",
                new List<SelectListItem>
                {
                    new SelectListItem { Text = "Mới nhất", Value = "newest", Selected = ViewBag.CurrentSort == "newest" || string.IsNullOrEmpty(ViewBag.CurrentSort) },
                    new SelectListItem { Text = "Giá tăng dần", Value = "priceAsc", Selected = ViewBag.CurrentSort == "priceAsc" },
                    new SelectListItem { Text = "Giá giảm dần", Value = "priceDesc", Selected = ViewBag.CurrentSort == "priceDesc" },
                    new SelectListItem { Text = "Bán chạy nhất", Value = "bestseller", Selected = ViewBag.CurrentSort == "bestseller" },
                    new SelectListItem { Text = "Tên A-Z", Value = "nameAsc", Selected = ViewBag.CurrentSort == "nameAsc" },
                    new SelectListItem { Text = "Tên Z-A", Value = "nameDesc", Selected = ViewBag.CurrentSort == "nameDesc" }
                },
                new { @class = "form-select", onchange = "this.form.submit()" })
        </div>
    }
</div>

<!-- Products Grid -->
<div class="container">
    <div class="row g-4">
        @foreach (var item in Model)
        {
            <div class="col-lg-4 col-md-6">
                <div class="product-card h-100">
                    <div class="card shadow-sm h-100">
                        <div class="product-image position-relative">
                            <img src="@item.FullPicturePath"
                                 class="card-img-top" alt="@item.ProductName">
                            @if (item.SoLuong <= 0)
                            {
                                <span class="badge bg-danger position-absolute top-0 end-0 m-2">Hết hàng</span>
                            }
                            else if (item.SoLuong <= 50)
                            {
                                <span class="badge bg-warning position-absolute top-0 end-0 m-2">Sắp hết</span>
                            }
                            @if (!string.IsNullOrEmpty(item.ProductSale))
                            {
                                <div class="discount-badge">
                                    <span>-@item.ProductSale%</span>
                                </div>
                            }
                            @if (item.ProductSold >= 100)
                            {
                                <div class="bestseller-badge">
                                    <i class="fas fa-fire"></i> Bán chạy
                                </div>
                            }
                        </div>
                        <div class="card-body d-flex flex-column">
                            <div class="product-category small text-muted mb-2">
                                <i class="fas fa-tag me-1"></i>@item.Catalog.CatalogName
                            </div>
                            <h5 class="card-title product-name" title="@item.ProductName">
                                @item.ProductName
                            </h5>
                            <div class="price-section mb-3">
                                @if (item.PriceOld.HasValue && item.PriceOld > item.UnitPrice)
                                {
                                    <div class="old-price text-muted text-decoration-line-through">
                                        @string.Format("{0:#,0}", item.PriceOld)đ
                                    </div>
                                }
                                <div class="current-price">
                                    @string.Format("{0:#,0}", item.UnitPrice)đ
                                </div>
                            </div>
                            <div class="product-stats small text-muted mb-3">
                                @if (item.ProductSold.HasValue && item.ProductSold > 0)
                                {
                                    <span class="me-2">
                                        <i class="fas fa-shopping-cart me-1"></i>Đã bán: @item.ProductSold
                                    </span>
                                }
                                <span>
                                    <i class="fas fa-boxes me-1"></i>Còn lại: @item.SoLuong
                                </span>
                            </div>
                            <div class="mt-auto">
                                @if (item.SoLuong > 0)
                                {
                                    <a href="@Url.Action("ThemGioHang", "Giohang", new { id = item.Id, strURL = Request.Url.ToString() })"
                                       class="btn btn-primary w-100 mb-2 add-to-cart-btn"
                                       data-product-id="@item.Id"
                                       onclick="return false;">

                                        <i class="fas fa-cart-plus me-2"></i>Thêm vào giỏ

                                    </a>
                                }
                                <a href="@Url.Action("ChitietSP", "Product", new { id = item.Id })"
                                   class="btn btn-outline-secondary w-100">
                                    <i class="fas fa-info-circle me-2"></i>Chi tiết
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Phân trang -->
    @if (Model.PageCount > 1)
    {
        <div class="container mb-5">
            <nav aria-label="Phân trang sản phẩm">
                <div class="pagination-wrapper">
                    <ul class="pagination pagination-custom justify-content-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link page-prev" href="@Url.Action("TatCaSanPham", new { page = 1, searchString = ViewBag.searchStr, category = ViewBag.SelectedCategory, sortOrder = ViewBag.CurrentSort })" aria-label="Đầu tiên">
                                    <i class="fas fa-angle-double-left"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link page-prev" href="@Url.Action("TatCaSanPham", new { page = Model.PageNumber - 1, searchString = ViewBag.searchStr, category = ViewBag.SelectedCategory, sortOrder = ViewBag.CurrentSort })" aria-label="Trước">
                                    <i class="fas fa-angle-left"></i>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link page-prev">
                                    <i class="fas fa-angle-double-left"></i>
                                </span>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link page-prev">
                                    <i class="fas fa-angle-left"></i>
                                </span>
                            </li>
                        }

                        @{
                            int startPage = Math.Max(1, Model.PageNumber - 2);
                            int endPage = Math.Min(Model.PageCount, startPage + 4);
                            startPage = Math.Max(1, endPage - 4);
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("TatCaSanPham", new { page = i, searchString = ViewBag.searchStr, category = ViewBag.SelectedCategory, sortOrder = ViewBag.CurrentSort })">@i</a>
                            </li>
                        }

                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link page-next" href="@Url.Action("TatCaSanPham", new { page = Model.PageNumber + 1, searchString = ViewBag.searchStr, category = ViewBag.SelectedCategory, sortOrder = ViewBag.CurrentSort })" aria-label="Tiếp">
                                    <i class="fas fa-angle-right"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link page-next" href="@Url.Action("TatCaSanPham", new { page = Model.PageCount, searchString = ViewBag.searchStr, category = ViewBag.SelectedCategory, sortOrder = ViewBag.CurrentSort })" aria-label="Cuối cùng">
                                    <i class="fas fa-angle-double-right"></i>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link page-next">
                                    <i class="fas fa-angle-right"></i>
                                </span>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link page-next">
                                    <i class="fas fa-angle-double-right"></i>
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            </nav>
        </div>
    }
</div>

@section Styles {
    <style>
        /* Banner Section */
        .page-banner {
            background: linear-gradient(to right, #f8f9fa, #e9ecef);
            border-left: 5px solid #0d6efd;
        }

        .breadcrumb-item a {
            text-decoration: none;
            color: #0d6efd;
        }

        /* Search Box */
        .search-box .form-control {
            min-width: 250px;
        }

        /* Filter Section */
        .filter-section {
            border: 1px solid #dee2e6;
        }

        .form-select {
            min-width: 200px;
        }

        /* Existing styles from TrangChu */
        /* Product Card */
        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

        .product-image {
            height: 200px;
            overflow: hidden;
            position: relative;
        }

            .product-image img {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.5s ease;
            }

        .product-card:hover .product-image img {
            transform: scale(1.05);
        }

        /* Discount Badge */
        .discount-badge {
            position: absolute;
            top: 10px;
            left: -5px;
            background: #ff4444;
            color: white;
            padding: 5px 10px;
            border-radius: 0 3px 3px 0;
            font-weight: bold;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

            .discount-badge::before {
                content: '';
                position: absolute;
                left: 0;
                bottom: -5px;
                border-top: 5px solid #cc0000;
                border-left: 5px solid transparent;
            }

        /* Bestseller Badge */
        .bestseller-badge {
            position: absolute;
            bottom: 10px;
            left: 10px;
            background: #ffd700;
            color: #000;
            padding: 5px 10px;
            border-radius: 3px;
            font-size: 0.8rem;
            font-weight: bold;
        }

        /* Product Name */
        .product-name {
            font-size: 1rem;
            height: 2.4em;
            line-height: 1.2;
            overflow: hidden;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            margin-bottom: 0.5rem;
        }

        /* Price Styling */
        .price-section {
            display: flex;
            flex-direction: column;
        }

        .old-price {
            font-size: 0.9rem;
            color: #6c757d;
        }

        .current-price {
            font-size: 1.2rem;
            font-weight: bold;
            color: #dc3545;
        }

        /* Product Stats */
        .product-stats {
            display: flex;
            justify-content: space-between;
            font-size: 0.8rem;
        }

        /* Button Styling */
        .add-to-cart-btn {
            transition: all 0.3s ease;
        }

            .add-to-cart-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 2px 8px rgba(0,0,0,0.15);
            }

        /* Stock Status */
        .stock-status {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1;
        }

        /* Responsive Adjustments */
        @@media (max-width: 768px) {
            .product-image {
                height: 150px;
            }

            .product-name {
                font-size: 0.9rem;
            }

            .current-price {
                font-size: 1rem;
            }

            .product-stats {
                flex-direction: column;
                gap: 0.5rem;
            }
        }

        /* Animation for Add to Cart */
        @@keyframes addToCartSuccess {
            0% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.1);
            }

            100% {
                transform: scale(1);
            }
        }

        .add-to-cart-success {
            animation: addToCartSuccess 0.5s ease;
        }
        /* Category Cards */
        .category-card {
            text-decoration: none;
            color: inherit;
            transition: all 0.3s ease;
            display: block;
        }

            .category-card:hover {
                transform: translateY(-5px);
            }

            .category-card .card {
                border: none;
                transition: all 0.3s ease;
            }

            .category-card:hover .card {
                box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15) !important;
            }

            .category-card .card-body {
                padding: 1.5rem;
            }

            .category-card .fas {
                transition: all 0.3s ease;
            }

            .category-card:hover .fas {
                transform: scale(1.2);
            }

            .category-card .badge {
                transition: all 0.3s ease;
            }

            .category-card:hover .badge {
                background-color: #0056b3 !important;
            }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .category-card .card-body {
                padding: 1rem;
            }

            .category-card h5 {
                font-size: 1rem;
            }

            .category-card .fas {
                font-size: 1.5em;
            }
        }

        /* Pagination Styling */
        .pagination {
            margin-top: 2rem;
        }

        .page-link {
            color: #0d6efd;
            border: 1px solid #dee2e6;
            padding: 0.5rem 0.75rem;
        }

            .page-link:hover {
                background-color: #e9ecef;
            }

        .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        /* Responsive Adjustments */
        @@media (max-width: 768px) {
            .search-box .form-control {
                min-width: auto;
            }

            .filter-section .d-flex {
                flex-direction: column;
                gap: 1rem;
            }

            .form-select {
                min-width: 100%;
            }
        }
        /* Phân trang đẹp hơn */
.pagination-wrapper {
    padding: 1rem 0;
}

.pagination-custom {
    gap: 5px;
}

.pagination-custom .page-item .page-link {
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 500;
    color: #555;
    border: 1px solid #dee2e6;
    background-color: #fff;
    transition: all 0.3s ease;
}

.pagination-custom .page-item .page-prev,
.pagination-custom .page-item .page-next {
    background-color: #f8f9fa;
}

.pagination-custom .page-item.active .page-link {
    background-color: #0d6efd;
    border-color: #0d6efd;
    color: white;
    box-shadow: 0 0 10px rgba(13, 110, 253, 0.4);
    transform: scale(1.1);
}

.pagination-custom .page-item .page-link:hover {
    background-color: #0d6efd;
    border-color: #0d6efd;
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
    z-index: 5;
}

.pagination-custom .page-item.disabled .page-link {
    color: #adb5bd;
    background-color: #f8f9fa;
    border-color: #dee2e6;
    cursor: not-allowed;
}

.pagination-info {
    font-size: 0.9rem;
    color: #6c757d;
    margin-bottom: 0.5rem;
}

/* Animation khi chuyển trang */
.pagination-custom .page-item .page-link {
    position: relative;
    overflow: hidden;
}

.pagination-custom .page-item .page-link:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: scale(0);
    transition: transform 0.3s;
}

.pagination-custom .page-item .page-link:active:after {
    transform: scale(2);
    opacity: 0;
    transition: transform 0.5s, opacity 0.3s 0.1s;
}

/* Cải tiến filter section */
.filter-section {
    margin-bottom: 2rem;
    background-color: #f8f9fa;
    border-radius: 0.5rem;
    padding: 1rem;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
}

.form-select {
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    transition: all 0.3s ease;
    border: 1px solid #ced4da;
}

.form-select:focus {
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

.form-select:hover {
    border-color: #0d6efd;
}

/* Cải tiến search box */
.search-box .form-control {
    border-radius: 0.5rem 0 0 0.5rem;
    transition: all 0.3s ease;
    border: 1px solid #ced4da;
}

.search-box .form-control:focus {
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

.search-box .btn {
    border-radius: 0 0.5rem 0.5rem 0;
}

/* Responsive */
@@media (max-width: 576px) {
    .pagination-custom .page-item .page-link {
        width: 35px;
        height: 35px;
        font-size: 0.85rem;
    }

    .form-select,
    .search-box .form-control {
        font-size: 0.9rem;
    }
}
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Tooltip cho tên sản phẩm dài
            $('.product-name').each(function () {
                if (this.offsetHeight < this.scrollHeight) {
                    $(this).tooltip({
                        title: $(this).text(),
                        placement: 'top'
                    });
                }
            });

            // Animation khi thêm vào giỏ hàng
            $('.add-to-cart-btn').click(function (e) {
                e.preventDefault();
                var btn = $(this);
                var originalText = btn.html();

                btn.html('<i class="fas fa-spinner fa-spin me-2"></i>Đang thêm...')
                    .prop('disabled', true);

                setTimeout(function () {
                    btn.html('<i class="fas fa-check me-2"></i>Đã thêm')
                        .removeClass('btn-primary')
                        .addClass('btn-success add-to-cart-success');

                    setTimeout(function () {
                        window.location.href = btn.attr('href');
                    }, 1000);
                }, 800);
            });

            // Lazy loading cho ảnh
            $('img.card-img-top').attr('loading', 'lazy');
        });
    </script>
}