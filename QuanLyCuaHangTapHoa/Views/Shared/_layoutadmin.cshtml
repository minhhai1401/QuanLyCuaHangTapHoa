<!DOCTYPE html>
<html lang="en">

<head>
    <title>@ViewBag.Title | Quản trị Admin</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Main CSS-->
    <link rel="stylesheet" type="text/css" href="~/Content/main.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <!-- or -->
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">
    <!-- Font-icon css-->
    <link rel="stylesheet" type="text/css"
          href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    @RenderSection("Styles", required: false)
    <style>
        /* Styles for dropdown menu */
        .app-header__user-menu {
            position: relative;
        }

            .app-header__user-menu:hover .user-dropdown {
                display: block;
            }

        .user-dropdown {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            min-width: 200px;
            background: #fff;
            border-radius: 4px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
            z-index: 1000;
            overflow: hidden;
        }

        .user-dropdown-header {
            background: #2D3250;
            color: white;
            padding: 12px 15px;
            font-weight: 500;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .user-dropdown-item {
            padding: 12px 15px;
            display: flex;
            align-items: center;
            color: #333;
            text-decoration: none;
            transition: all 0.2s ease;
            border-bottom: 1px solid #f2f2f2;
        }

            .user-dropdown-item:last-child {
                border-bottom: none;
            }

            .user-dropdown-item:hover {
                background-color: #f8f9fa;
            }

            .user-dropdown-item i {
                margin-right: 10px;
                width: 20px;
                text-align: center;
                color: #2D3250;
            }

            .user-dropdown-item button {
                background: none;
                border: none;
                padding: 0;
                margin: 0;
                font-size: inherit;
                font-family: inherit;
                cursor: pointer;
                display: flex;
                align-items: center;
                width: 100%;
                text-align: left;
            }

        .user-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #F6B17A;
            color: #2D3250;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 10px;
        }

        .app-nav__user-info {
            display: flex;
            align-items: center;
        }
    </style>
</head>

<body onload="time()" class="app sidebar-mini rtl">

    @{
        if (Session["NV"] == null)
        {
            Response.Redirect("~/Admin/Home/Login");
        }
    }
    <!-- Navbar-->
    <header class="app-header">
        <!-- Sidebar toggle button-->
        <a class="app-sidebar__toggle" href="#" data-toggle="sidebar" aria-label="Hide Sidebar"></a>

        <!-- Navbar Right Menu-->
        <ul class="app-nav">
            <!-- User Menu-->
            <li class="app-header__user-menu">
                <div class="app-nav__user-info">
                    @if (Session["NV"] != null)
                    {
                        <div class="user-avatar">
                            @(Session["TenNV"] != null ? Session["TenNV"].ToString()[0] : "A")
                        </div>
                        <span>@Session["TenNV"]</span>
                    }
                    <i class='bx bx-chevron-down ml-2'></i>
                </div>

                <div class="user-dropdown">
                    <div class="user-dropdown-header">
                        Tài khoản của bạn
                    </div>
                    <a href="@Url.Action("Profile", "Home")" class="user-dropdown-item">
                        <i class='bx bx-user-circle'></i> Thông tin cá nhân
                    </a>
                    <a href="@Url.Action("ChangePassword", "Home")" class="user-dropdown-item">
                        <i class='bx bx-lock-alt'></i> Đổi mật khẩu
                    </a>
                    @using (Html.BeginForm("Logout", "Home", FormMethod.Post, new { id = "logoutFormAdmin" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="user-dropdown-item">
                            <button type="button" id="btnLogout">
                                <i class='bx bx-log-out'></i> Đăng xuất
                            </button>
                        </div>
                    }
                </div>
            </li>
        </ul>
    </header>

    @{
        Html.RenderPartial("_sidebarAdmin");
    }

    <main class="app-content">
        @RenderBody()
        @RenderSection("scripts", required: false)
    </main>

    <script src="~/Scripts/jquery-3.2.1.min.js"></script>
    <!--===============================================================================================-->
    <script src="~/Scripts/popper.min.js"></script>
    <script src="https://unpkg.com/boxicons@latest/dist/boxicons.js"></script>
    <!--===============================================================================================-->
    <script src="~/Scripts/bootstrap.min.js"></script>
    <!--===============================================================================================-->
    <script src="~/Scripts/main.js"></script>
    <!--===============================================================================================-->
    <script src="~/Scripts/pace.min.js"></script>
    <!--===============================================================================================-->
    <script type="text/javascript" src="~/Scripts/chart.js"></script>
    <script type="text/javascript">
        // Handle logout confirmation
        $(document).ready(function() {
            $('#btnLogout').on('click', function(e) {
                e.preventDefault();
                swal({
                    title: "Xác nhận đăng xuất",
                    text: "Bạn có chắc chắn muốn đăng xuất khỏi hệ thống?",
                    icon: "warning",
                    buttons: ["Hủy", "Đăng xuất"],
                    dangerMode: true,
                })
                .then((willLogout) => {
                    if (willLogout) {
                        $('#logoutFormAdmin').submit();
                    }
                });
            });
        });

        // Original script for active menu highlighting
        const currentUrl = window.location.href
        const getNameCate = currentUrl.split('Admin')?.[1]
        console.log(getNameCate)
        if (getNameCate) {
            const allCate = document.querySelectorAll('.app-menu__item')
            let activeCate
            for (var i = 0; i < allCate.length; i++) {
                if (allCate[i].getAttribute('href').split('Admin')?.[1] === getNameCate) {
                    activeCate = allCate[i]
                    break
                }
            }
            if (activeCate) {
                activeCate.classList.add("active")
            }
        }

        async function gicungduoc() {
            // Thêm active vào category
            let dataOrder = []
            async function ajaxGetOrder() {
                return new Promise((resolve, reject) => {
                    $.ajax({
                        type: 'GET',
                        url: "@(Url.Action("getDataOrder", "Home"))",
                        contentType: "application/json; charset=utf-8",
                        async: true,
                        success: function (response) {
                            resolve(response)
                            //do your stuff
                        },
                        failure: function (response) {
                            console.log(response.responseText);
                        },
                        error: function (response) {
                            reject(response.responseText)
                        }
                    })
                })
            }

            dataOrder = await ajaxGetOrder()

            const doneOrder = dataOrder.filter((item) => item.Status == 'Hoàn thành')

            const arrChart = []
            const arrChartProduct = []

            for (let i = 0; i < 12; i++) {
                const order = doneOrder.filter((item) => {
                    var date = eval(item.NgayDat.replace(/\/Date\((\d+)\)\//gi, "new Date($1)"));
                    return date.getMonth() == i
                })

                const totalQuantity = order.reduce((total, item) => {
                    return total += item.TongSoLuong
                }, 0)
                arrChartProduct.push(totalQuantity)
                const totalMoney = order.reduce((total, item) => {
                    return total += item.ThanhTien
                }, 0)
                arrChart.push(totalMoney)
            }

            var data = {
                labels: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
                datasets: [
                {
                    label: "Dữ liệu kế tiếp",
                    fillColor: "rgba(9, 109, 239, 0.651)  ",
                    pointColor: "rgb(9, 109, 239)",
                    strokeColor: "rgb(9, 109, 239)",
                    pointStrokeColor: "rgb(9, 109, 239)",
                    pointHighlightFill: "rgb(9, 109, 239)",
                    pointHighlightStroke: "rgb(9, 109, 239)",
                    data: arrChart
                }
                ]
            };

            var dataProductSold = {
                labels: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
                datasets: [
                    {
                        label: "Dữ liệu kế tiếp",
                        fillColor: "rgba(9, 109, 239, 0.651)  ",
                        pointColor: "rgb(9, 109, 239)",
                        strokeColor: "rgb(9, 109, 239)",
                        pointStrokeColor: "rgb(9, 109, 239)",
                        pointHighlightFill: "rgb(9, 109, 239)",
                        pointHighlightStroke: "rgb(9, 109, 239)",
                        data: arrChartProduct
                    }
                ]
            };
            var ctxl = $("#lineChartDemo").get(0).getContext("2d");
            var lineChart = new Chart(ctxl).Line(dataProductSold);
            var ctxb = $("#barChartDemo").get(0).getContext("2d");
            var barChart = new Chart(ctxb).Bar(data);
        }
        gicungduoc()

        //Thời Gian
        function time() {
            var today = new Date();
            var weekday = new Array(7);
            weekday[0] = "Chủ Nhật";
            weekday[1] = "Thứ Hai";
            weekday[2] = "Thứ Ba";
            weekday[3] = "Thứ Tư";
            weekday[4] = "Thứ Năm";
            weekday[5] = "Thứ Sáu";
            weekday[6] = "Thứ Bảy";
            var day = weekday[today.getDay()];
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);
            nowTime = h + " giờ " + m + " phút " + s + " giây";
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            today = day + ', ' + dd + '/' + mm + '/' + yyyy;
            tmp = '<span class="date"> ' + today + ' - ' + nowTime +
                '</span>';
            document.getElementById("clock").innerHTML = tmp;
            clocktime = setTimeout("time()", "1000", "Javascript");

            function checkTime(i) {
                if (i < 10) {
                    i = "0" + i;
                }
                return i;
            }
        }
    </script>
</body>
</html>